pointcuts
Aspect1.java:
 package com.example.demo;
 import org.aspectj.lang.annotation.Aspect;
 import org.aspectj.lang.annotation.Before;
 import org.aspectj.lang.annotation.Pointcut;
 import org.springframework.stereotype.Component;
 @Aspect
 @Component
 public class Aspect1 {
@Pointcut("execution(* com.example.demo.Service1.method1())")
public void pointcutMethod1() {
 }
 	@Pointcut("execution(* com.example.demo.Service1.method2())")
 	public void pointcutMethod2() {
 }
 	@Before("pointcutMethod1()")
 	public void beforeMethod1() {
 		System.out.println("Before advice for method1");
 }
 	@Before("pointcutMethod2()")
 	public void beforeMethod2() {
 		System.out.println("Before advice for method2");
 }
 }
 Prac81Application.java:
 package com.example.demo;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 import org.springframework.context.ConfigurableApplicationContext;
 import com.example.demo.Service1;
 @SpringBootApplication
public class Prac81Application {
 	public static void main(String[] args) {
 		ConfigurableApplicationContext
 		context=SpringApplication.run(Prac81Application.class, args);
 		Service1 mservice = context.getBean(Service1.class);
 		mservice.method1();
 		mservice.method2();
 	}
 }
 Service1.java:
 package com.example.demo;
 import org.springframework.stereotype.Service;
 @Service
 public class Service1 {
 	public void method1() {
 		System.out.println("Executing method1");
 		}
 	public void method2() {
 		System.out.println("Executing method2");
 		}}
